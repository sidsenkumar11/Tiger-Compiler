(program let (declseg typedecls vardecls (funcdecls (funcdecl func return_it ( (params (neparams (param n : (type int)))) ) (optrettype : (type int)) begin (stmts (fullstmt (stmt return (numexpr (term (factor ( (numexpr (term (factor n))) ))))) ;)) end ;) (funcdecls (funcdecl func dont_return_it ( (params (neparams (param n : (type int)))) ) (optrettype : (type int)) begin (stmts (fullstmt (stmt (lvalue n optoffset) := (numexpr (numexpr (term (factor n))) (linop +) (term (factor (const 1))))) ;)) end ;) funcdecls))) in (stmts (fullstmt (stmt optstore return_it ( (numexprs (neexprs (numexpr (term (factor (const 5)))))) )) ;) (stmts (fullstmt (stmt optstore dont_return_it ( (numexprs (neexprs (numexpr (term (factor (const 4)))))) )) ;))) end)
