(program let (declseg typedecls (vardecls (vardecl var (ids m) : (type int) (optinit := (const 5)) ;) vardecls) (funcdecls (funcdecl func print ( (params (neparams (param n : (type int)))) ) optrettype begin (stmts (fullstmt (stmt if (boolexpr (clause (pred (numexpr (term (factor n))) (boolop <>) (numexpr (term (factor (const 1))))))) then (stmts (fullstmt (stmt optstore print ( (numexprs (neexprs (numexpr (numexpr (term (factor n))) (linop -) (term (factor (const 1)))))) )) ;) (stmts (fullstmt (stmt optstore printi ( (numexprs (neexprs (numexpr (term (factor n))))) )) ;))) else (stmts (fullstmt (stmt optstore printi ( (numexprs (neexprs (numexpr (term (factor n))))) )) ;)) endif) ;)) end ;) funcdecls)) in (stmts (fullstmt (stmt optstore print ( (numexprs (neexprs (numexpr (term (factor m))))) )) ;)) end)
