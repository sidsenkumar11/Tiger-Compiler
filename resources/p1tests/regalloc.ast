(program let (declseg typedecls (vardecls (vardecl var (ids a , (ids b , (ids c , (ids d , (ids e))))) : (type int) (optinit := (const 0)) ;) vardecls) funcdecls) in (stmts (fullstmt (stmt (lvalue a optoffset) := (numexpr (numexpr (term (factor a))) (linop +) (term (factor (const 0))))) ;) (stmts (fullstmt (stmt (lvalue b optoffset) := (numexpr (numexpr (term (factor b))) (linop +) (term (factor (const 1))))) ;) (stmts (fullstmt (stmt (lvalue c optoffset) := (numexpr (numexpr (term (factor c))) (linop +) (term (factor (const 2))))) ;) (stmts (fullstmt (stmt (lvalue d optoffset) := (numexpr (numexpr (term (factor d))) (linop +) (term (factor (const 3))))) ;) (stmts (fullstmt (stmt (lvalue e optoffset) := (numexpr (numexpr (term (factor e))) (linop +) (term (factor (const 4))))) ;) (stmts (fullstmt (stmt if (boolexpr (clause (pred (numexpr (term (factor b))) (boolop <>) (numexpr (term (factor (const 0))))))) then (stmts (fullstmt (stmt (lvalue a optoffset) := (numexpr (term (factor (const 0))))) ;) (stmts (fullstmt (stmt (lvalue b optoffset) := (numexpr (term (factor (const 1))))) ;) (stmts (fullstmt (stmt (lvalue c optoffset) := (numexpr (term (factor (const 2))))) ;)))) else (stmts (fullstmt (stmt (lvalue d optoffset) := (numexpr (term (factor (const 3))))) ;) (stmts (fullstmt (stmt (lvalue e optoffset) := (numexpr (term (factor (const 4))))) ;))) endif) ;) (stmts (fullstmt (stmt optstore printi ( (numexprs (neexprs (numexpr (term (factor a))))) )) ;) (stmts (fullstmt (stmt optstore printi ( (numexprs (neexprs (numexpr (term (factor b))))) )) ;) (stmts (fullstmt (stmt optstore printi ( (numexprs (neexprs (numexpr (term (factor c))))) )) ;) (stmts (fullstmt (stmt optstore printi ( (numexprs (neexprs (numexpr (term (factor d))))) )) ;) (stmts (fullstmt (stmt optstore printi ( (numexprs (neexprs (numexpr (term (factor e))))) )) ;)))))))))))) end)
