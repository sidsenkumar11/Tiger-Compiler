(program let (declseg (typedecls (typedecl type int_arr := (type array [ 100 ] of (type int)) ;) typedecls) (vardecls (vardecl var (ids a) : (type int_arr) (optinit := (const 0)) ;) vardecls) funcdecls) in (stmts (fullstmt (stmt for i := (numexpr (term (factor (const 2)))) to (numexpr (term (factor (const 100)))) do (stmts (fullstmt (stmt (lvalue a (optoffset [ (numexpr (term (factor i))) ])) := (numexpr (numexpr (term (factor a [ (numexpr (term (factor i))) ]))) (linop +) (term (factor a [ (numexpr (numexpr (term (factor i))) (linop -) (term (factor (const 1)))) ])))) ;) (stmts (fullstmt (stmt optstore printi ( (numexprs (neexprs (numexpr (term (factor a [ (numexpr (term (factor i))) ]))))) )) ;))) enddo) ;)) end)
